name: IRCC Tracker Debug
on: [workflow_dispatch]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          sudo apt-get install -y libgbm-dev wget
          pip install playwright==1.42.0
          playwright install --with-deps chromium
          
      - name: Run with full debugging
        run: |
          python -c "
          from playwright.sync_api import sync_playwright
          import base64
          
          with sync_playwright() as p:
              browser = p.chromium.launch(
                  headless=True,
                  args=['--no-sandbox', '--disable-dev-shm-usage'],
                  timeout=120000
              )
              context = browser.new_context(
                  user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
                  viewport={'width': 1920, 'height': 1080}
              )
              page = context.new_page()
              
              try:
                  # Debug network requests
                  page.on('request', lambda r: print(f'>> {r.method} {r.url}'))
                  page.on('response', lambda r: print(f'<< {r.status} {r.url}'))
                  
                  print('Navigating to page...')
                  response = page.goto(
                      'https://ircc-tracker-suivi.apps.cic.gc.ca/en/login',
                      wait_until='networkidle',
                      timeout=120000
                  )
                  print(f'Navigation status: {response.status}')
                  
                  # Save multiple debug files
                  page.screenshot(path='debug.png', full_page=True)
                  with open('page_content.html', 'w') as f:
                      f.write(page.content())
                  with open('console_logs.txt', 'w') as f:
                      f.write('\n'.join([msg.text for msg in page.context.pages[0].console_messages]))
                  
                  # Verify elements exist
                  print('Checking elements...')
                  uci_exists = page.locator('#uci').count()
                  print(f'UCI field exists: {bool(uci_exists)}')
                  
                  if not uci_exists:
                      raise Exception('UCI field not found')
                      
                  # Your form interaction code here
                  
              except Exception as e:
                  print(f'ERROR: {str(e)}')
                  page.screenshot(path='error.png')
                  raise
              finally:
                  browser.close()
          "
          
      - name: Upload debug files
        uses: actions/upload-artifact@v4
        with:
          name: debug-files
          path: |
            debug.png
            page_content.html
            console_logs.txt
            error.png
